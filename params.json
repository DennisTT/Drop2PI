{"name":"Drop2pi","tagline":"This is a simple Dropbox Client tool to sync files to Raspberry PI.","body":"## Drop2PI ##\r\n\r\nFirst, sorry for bad English.\r\n\r\nThis is a very simple tool to sync files between Dropbox and Raspberry PI. In fact this command tools can used any system running on Python.\r\n\r\nBut I only wants to sync files to Raspberry PI. So I called this Dropbox to PI.\r\n\r\n\r\n## Drop2PI 中文 ##\r\n\r\nDrop2PI是树莓派和Dropbox同步的一个非常简单的小工具，因为Dropbox并不支持ARM，所以用Python简单的实现了一个Dropbox客户端，可以在树莓派使用。\r\n\r\n## What's New ##\r\n\r\n1. download the file and folder auto.\r\n2. modify the folder, auto sync to Dropbox.\r\n3. delete the file or folder which deleted in Dropbox server auto.\r\n\r\nZH-CN:\r\n\r\n1. 自动下载文件和文件夹\r\n2. 修改本地文件和文件夹，会同步到Dropbox里\r\n3. 删除文件或文件夹，会自动删除Dropbox服务器里的文件\r\n\r\n## Need to do ##\r\n\r\n1. config the max donload file size.\r\n2. if there is syncing event, quit update event. (see known bug)\r\n\r\nZH-CN:\r\n\r\n1. 配置最大的下载文件，文件过大就不下载\r\n2. 如果正在同步，则取消更新服务\r\n\r\n## Packages ##\r\n\r\n依赖的包：\r\n\r\nYou have to install [Watchdog](https://github.com/gorakhargosh/watchdog) first.\r\n\r\nAnd also download Dropbox python SDK [HERE](https://www.dropbox.com/developers/core/sdk).\r\n\r\n## Setup ##\r\n\r\n#### config file / 生成配置文件 ####\r\n\r\n    cp config.py.tmp config.py\r\n\r\n#### edit config / 编辑配置文件 ####\r\n\r\nopen config file and you can see code below:\r\n\r\n\tAPP_KEY     = 'xj0so6fatvhx4xb'\r\n\tAPP_SECRET  = 'zlwh6p1xvp9f5lk'\r\n\tACCESS_TYPE = 'app_folder'\r\n\tTOKEN_FILE  = 'dropbox_token.txt'\r\n\tPATH_TO_WATCH = '/Users/guojing/.dropbox-sync'\r\n\r\n你需要去 [Dropbox Develop Page](https://www.dropbox.com/developers/apps) 创建一个APP，然后使用APP里的APP_KEY, APP_SECRET, ACCESS_TYPE。\r\n\r\nYou have to go to [Dropbox Develop Page](https://www.dropbox.com/developers/apps) to create a App.\r\n\r\nAfter created a App, you can find the APP_KEY and APP_SECRET, ACCESS_TYPE is also needed.\r\n\r\nPATH_TO_WATCH is the directory that sync with Dropbox.\r\n\r\n#### run auth.py / 认证 ####\r\n\r\n\tpython auth.py\r\n\r\nIt will ask you open a link in Browser, and just do what Dropbox ask. Then you can get the token file.\r\n\r\n#### run watching.py / 运行 ####\r\n\r\n\tpython watching.py\r\n\r\nThis will watch dir `PATH_TO_WATCH`, and any changes like `create`, `modify`, `delete` and `move` will change the file in Dropbox.\r\n\r\n#### commands / 命令 ####\r\n\r\nDownload all the files and start to watch the folder.\r\n\r\n\tpython watching.py\r\n\r\nClean the sync folder (remove it) and re-download the latest files.\r\n\r\n\tpython watching.py -c\r\n\r\nDownload the latest files but do not watch it. The script will exit after download the files.\r\n\r\n\tpython watching.py -e\r\n\r\nWatch but not download, will update file to server.\r\n\r\n\tpython watching.py -r\r\n\r\n### something you can do yourself ###\r\n\r\nI wrote some super easy interface like upload, download, delete, move. After you get the token, you can do it in python command line like\r\n\r\n\tfrom uploader import upload\r\n\tupload(file_name, as_file_name)\r\n\r\nor you can run the file like:\r\n\r\n\tpython uploader.py file_to_upload as_file\r\n\r\nSo if this watching.py is not what you want, I think it's very easy to be the one you really need.\r\n\r\n### My PI ###\r\n\r\nI need to download some files in my PI, don't need to update or edit on PI. so I just need a cron running on watching.py -c.\r\n\r\nsoundbbg at gmail\r\n","google":"UA-43528752-1","note":"Don't delete this file! It's used internally to help with page regeneration."}